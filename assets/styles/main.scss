/************************************************************************************ 
    Different browser have different default styles.
    We want to make our website has the same look & feel on every browser.
    We need to explicitly reset styles.
************************************************************************************/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    list-style: none;
}

:root {
    --color-primary: #1a1f2f;
    --color-secondary: #f47309f7;
    --color-white: #ffffff;
    --color-black: #000000;
    --color-grey-0: #f7f7f7;
    --color-grey-1: #dee3e9;
    --color-grey-2: #afbbc9;
    --color-grey-3: #6f7d88;
    --color-grey-4: #465057;
    --color-grey-5: #2c3038;
    --color-grey-6: #101619;
    --box-shadow-1: 0 3px 15px rgba(0, 0, 0, 0.25);
}

body {
    background-color: var(--color-primary);
    font-family: 'Poppins', sans-serif;
    font-size: 1.2rem;
    color: var(--color-white);
}

/**
    Inactive section has to be invisible (use none for it)
**/
.container {
    display: none;
    transform: translateY(-100%) scale(0);
    transition: all 0.4s ease-in-out;
}

header {
    min-height: 100vh;
    overflow: hidden;
}

section {
    min-height: 100vh;
    width: 100%;
    position: absolute;
    left: 0;
    top: 0;
    padding: 5rem 15rem;
}

/**
    Active section has to be visible (use block for it)
**/
.active-container {
    display: block;
    animation: appear 1s ease-in-out;
    transform: translateY(0) scaleY(1);

    @keyframes appear {
        0% {
            transform: translateY(-100%) scaleY(0);
        }

        100% {
            transform: translateY(0) scaleY(1);
        }
    }
}

.controls {
    position: fixed;
    z-index: 10;
    top: 50%;
    right: 3%;
    display: flex;
    flex-direction: column;
    transform: translateY(-50%);

    .control {
        padding: 1rem;
        cursor: pointer;
        background-color: var(--color-grey-4);
        width: 55px;
        height: 55px;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 0.7rem 0;
        box-shadow: var(--box-shadow-1);

        i {
            font-size: 1.2rem;
            color: var(--color-grey-2);
            pointer-events: none;
        }
    }

    /**
        When activating control, it has smooth animation.
    **/
    .active-control {
        background-color: var(--color-secondary);
        transition: all 0.5s ease-in-out;

        i {
            color: var(--color-white);
        }
    }
}





/* header styles */
.header-content {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    min-height: 100vh;

    .header-left-side-content {
        width: 40vw;
        display: flex;
        align-items: center;
        position: relative;

        .h-shape {
            transition: all 0.4s ease-in-out;
            width: 65%;
            height: 100vh;
            background-color: var(--color-secondary);
            position: absolute;
            left: 0;
            top: 0;
            z-index: -1;
            clip-path: polygon(0 0, 50% 0, 90% 100%, 0% 100%);
        }

        .portrait {
            border-radius: 30px;
            max-height: 80vh;
            margin-left: 8rem;
            background-color: var(--color-black);
            transition: all 0.4s ease-in-out;

            img {
                border-radius: 30px;
                max-height: 80vh;
                object-fit: cover;
                transition: all 0.4s ease-in-out;
                filter: grayscale(100%);

                &:hover {
                    filter: grayscale(0);
                }
            }
        }
    }

    .header-right-side-content {
        width: 60vw;
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding-right: 18rem;

        .greetings {
            font-size: 3rem;

            span {
                color: var(--color-secondary);
            }
        }

        p {
            margin: 1.5rem 0;
            line-height: 2rem;
        }
    }

}


.button-container {
    display: flex;
    align-self: flex-start;

    a {
        text-decoration: none;
    }
}

/** shared styles **/
.button-primary {
    border-radius: 0 30px 30px 0;
    color: inherit;
    font-weight: 600;
    position: relative;
    border: 1px solid var(--color-secondary);
    display: flex;
    align-self: flex-start;
    align-items: center;
    overflow: hidden;

    .button-text {
        padding: 0 2rem;
    }

    .button-icon {
        background-color: var(--color-secondary);
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        padding: 1rem;
    }

    &::before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        transform: translateX(100%);
        transition: all 0.4s ease-out;
        z-index: -1;
    }

    &:hover {
        transition: all 0.4s ease-out;

        &::before {
            width: 100%;
            height: 100%;
            background-color: var(--color-secondary);
            transform: translateX(0);
            transition: all 0.4s ease-out;
        }
    }
}